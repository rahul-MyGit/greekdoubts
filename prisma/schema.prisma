generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  questions      Question[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id            String        @id @default(cuid())
  title         String
  content       String
  userId        String       
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Answer        Answer[]

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt      
}

model Answer {
  id           String         @id @default(cuid())
  solution     String
  questionId   String
  questions    Question       @relation(fields: [questionId], references: [id], onDelete: Cascade)

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}